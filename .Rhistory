getwd()
packrat::on()
packrat::on()
packrat::status()
install.packages('rjson')
packrat::status()
install.packages('TGS')
packrat::status()
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("minet")
packrat::status()
packrat::snapshot()
packrat:status()
packrat::status()
packrat::snapshot()
setRepositories()
packrat::snapshot()
packrat::status
packrat::status()
packrat::snapshot()
options(repos=structure(BiocManager::repositories()))
packrat::snapshot()
packrat::status()
packageVersion('TGS')
install.packages('TGS')
packageVersion('TGS')
library(TGS)
packrat::on()
install.packages('TGS')
getOption('repos')
install.packages('TGS', repos = "https://cran.rstudio.com/")
packrat::status()
old.packages()
uninstall.packages('TGS')
remove.packages('TGS')
install.packages('TGS', repos = "https://cran.rstudio.com/")
packrat::status()
packrat::snapshot()
packrat::status()
packrat::status()
install.packages('TGS', repos = "https://cran.asia/")
q()
packrat::on()
packrat::status()
remove.packages('TGS')
install.packages('TGS')
install.packages("C:\Users\Sap\Downloads\TGS_1.0.1.tar.gz", repo = NULL, type = "source")
install.packages("C:\\Users\\Sap\\Downloads\\TGS_1.0.1.tar.gz", repo = NULL, type = "source")
packageVersion('TGS')
packrat::status()
remove.packages('TGS')
packageVersion('TGS')
install.packages('TGS', type = 'source')
packageVersion('TGS')
packrat::status()
length(args())
length(args
)
args
ls()
json_file <- "C:/GitHub/TGS-bm/asset/input.Ds10n.2L.wt.mi.pca.cmi.CLR.json"
input_params <- rjson::fromJSON(file = json_file)
input_params
rm(list=ls())
readLines("C:/GitHub/TGS-bm/asset/input.Ds10n.2L.wt.mi.pca.cmi.CLR.json", warn = FALSE)
packrat::on()
packrat::status()
packrat::snapshot()
packrat::status()
packageVersion('rjson')
packrat::on()
grep('abcd', 'abcd', value = TRUE, fixed = TRUE)
ls()
getwd()
load("C:/GitHub/TGS-bm/asset/Output_TGS_Ed10n_win/Result.RData")
ls()
Result
colMeans(Result[, 'F1'])
colMeans(Result, na.rm = TRUE)
ls()
rm(Result)
ls()
packrat::bundle()
